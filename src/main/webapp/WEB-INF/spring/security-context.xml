<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    
    <!-- 검사 URL (인증)-->
    <http auto-config="true" use-expressions="true"> 
            <!--  use-expressions는 함수를 사용할수 있게 해주는 것 false일 경우 access에 'ROLE_MEMBER' 다이렉트로 들어감 -->
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_MEMBER')" />
            <!-- 필터에서 가로채서 권한있는사람(hasRole('ROLE_MEMBER'))만 /admin/** 들어오는 걸 허용하겠다
            "/admin/**" URL은 리소스이다 -->
        <form-login login-page ="/login/loginForm"/> 
	        <!--
	         <form-login/> 은 로그인 페이지를 말한다
	         <form-login/> ->디폴트  이다
	         <form-login login-page ="/login/loginForm"> -> 커스토마 해준다(디폴트쓰지않고 바로 타게해준다)-->         
    </http>
    
	<!-- provider (권한)--> 
	<authentication-manager>
	    <authentication-provider> 
			<user-service> 
				<user name="member" password="{noop}member" authorities="ROLE_MEMBER" /> 
				<user name="admin" password="{noop}admin" authorities="ROLE_MEMBER,ROLE_ADMIN" /> 
				<!-- password="{noop}member -> 꼭{noop}이 들어가야함
				     authorities="ROLE_MEMBER"권한을 주고 있다-->
			</user-service> 
		</authentication-provider>
	</authentication-manager>
    
    
</beans:beans>
