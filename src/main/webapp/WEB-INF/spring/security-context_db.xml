<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
    
    <!-- 검사 URL -->
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/login/loginForm" access="permitAll" />
        <intercept-url pattern="/" access="permitAll" />
        <intercept-url pattern="/user/**" access="permitAll" />
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/**" access="hasAnyRole('USER, ADMIN')" />
        
        <form-login login-page="/login/loginForm"
                    default-target-url="/" 
                    authentication-failure-url="/login/loginForm?error" 
                    username-parameter="id"
                    password-parameter="password" />
        
         <logout logout-url="/logout" logout-success-url="/" /> 
                
        <access-denied-handler error-page="/login/accessDenied" /> <!-- 접근제한일 때 뜨는 페이지 -->
    </http>    
    
    
    <!-- 우리 db에 있는 정보로 접속을 하고 싶을 때 -->
     <beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>  
    
    
   
    <!-- 추가해주기 -->
     <beans:bean id="customNoOpPasswordEncoder" class="edu.bit.ex.security.CustomNoOpPasswordEncoder"/> 
     <beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    
    
   

<!--      <jdbc-user-service 
            data-source-ref="dataSource"
            role-prefix=""
            users-by-username-query="select username, password, enabled from users where username = ?"
            authorities-by-username-query="select username, authority from authorities where username = ?"
            group-authorities-by-username-query="select g.id, g.group_name, ga.authority from groups g, group_members gm, group_authorities ga where gm.username = ? and g.id = ga.group_id and g.id = gm.group_id"
    /> -->
	
	
	
	<!-- 기존에 있는 DB를 이용 -->
    <!--  provider  -->
      <authentication-manager>
        <authentication-provider>
        <!-- <password-encoder ref ="customNoOpPasswordEncoder"/> -->
        <password-encoder ref ="bcryptPasswordEncoder"/>
        <jdbc-user-service 
            data-source-ref="dataSource"         
            users-by-username-query="select username, password, enabled from users where username = ?"  
            authorities-by-username-query="select username, authority from authorities where username = ?"/>   
            <!-- 유저인증에 대한 쿼리 / 권한에 대한 쿼리-->
        
        <!-- 아래 쿼리는 ename : username / empno:pw로 할 경우 쿼리이다 
             users-by-username-query="select ename, empno, 1  from emp where ename = ?"
            authorities-by-username-query="select ename,case when job='MANAGER' then 'ROLE_ADMIN' else  'ROLE_USER' end authority from emp where ename=?"/>   -->   
        
        </authentication-provider>
    </authentication-manager> 
    
<!--    <authentication-manager>
        <authentication-provider>
        <jdbc-user-service 
            data-source-ref="dataSource"
         />
        </authentication-provider>
    </authentication-manager> -->
   
</beans:beans>